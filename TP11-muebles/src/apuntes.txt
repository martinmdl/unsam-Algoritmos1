LANG.WLK: https://www.wollok.org/documentacion/wollokdoc/
	add(element) // no return - agrega element a la coleccion
	all(closure) // boolean - si todo elemento cumple el closure
	any(closure) // boolean - si algun elemento cumple el closure
	asList() // list - transforma de conjunto a lista
	asSet() // set - transforma de lista a conjunto
	contains(element) // boolean - si contiene ese elemento
	count(closure) // int - cuenta los elementos que cumplan el closure
	difference() // set - diferencia
	filter(closure) // list - todo elemento que cumpla el closure
	find(closure) // element - un elemento que cumpla el closure
	first() // element - primer elemento de una lista
	flatMap() // list - flatten() y map()
	flatten() // list - [[1, 2], [3, 4]] -> [1, 2, 3, 4]
	forEach(closure) // no return - ejecuta el closure en cada elemento
	get(index) // element - busca por indice
	intersection() // set - intersection
	isEmpty() // boolean - si la coleccion esta vacia
	map(closure) // list - transforma cada elemento segun el closure
	max(closure) // element - mayor elemento segun el closure
	min(closure) // element - menor elemento segun el closure
	remove() // no return - elimina elemento de la coleccion
	size() // int - cantidad de elementos
	sum(closure) // int - suma cada elemento segun el closure

CONCEPTOS: https://www.wollok.org/documentacion/conceptos/
"fixture" = "method initialize() {}"













